@model RaptorENEL_V._1._0.Models.User

@{
    ViewBag.Title = "Edit";
}

<h2>EDITAR USUARIO</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)

        <div class="form-group">
            <label class="control-label col-md-2" for="username">Nombre de usuario</label>
            <div class="col-md-10 input-group secondary">
                <span class="input-group-addon">
                    <span class="arrow"></span>
                    <i class="fa fa-user" style="color: #555555 !important;"></i>
                </span>
                @Html.EditorFor(model => model.username, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.username, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="password">Contraseña</label>
            <div class="col-md-10 input-group secondary">
                <span class="input-group-addon">
                    <span class="arrow"></span>
                    <i class="fa fa-lock" style="color: #555555 !important;"></i>
                </span>
                @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
            </div>
            <span class="desc">*La contraseña debe tener entre 8 y 15 carácteres.</span>
            <br /><span class="desc">*La contraseña debe contener al menos 1 número, 1 mayúscula, 1 minúscula y un carácter especial.</span>
        </div>
        <hr>
        <h4>Información personal</h4>
        <div class="form-group">
            <label class="control-label col-md-2" for="first_name">Nombres</label>
            <div class="col-md-10 input-group secondary">
                <span class="input-group-addon">
                    <span class="arrow"></span>
                    <i class="fa fa-address-card" style="color: #555555 !important;"></i>
                </span>
                @Html.EditorFor(model => model.first_name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.first_name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="last_name">Apellidos</label>
            <div class="col-md-10 input-group secondary">
                <span class="input-group-addon">
                    <span class="arrow"></span>
                    <i class="fa fa-address-card" style="color: #555555 !important;"></i>
                </span>
                @Html.EditorFor(model => model.last_name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.last_name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="email">Correo electrónico</label>
            <div class="col-md-10 input-group secondary">
                <span class="input-group-addon">
                    <span class="arrow"></span>
                    <i class="fa fa-envelope" style="color: #555555 !important;"></i>
                </span>
                @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
            </div>
        </div>
        <hr>
        <h4>Permisos</h4>
      
        <div class="form-group">
            <label class="control-label col-md-2" for="is_staff">Es staff</label>
            <div class="col-md-10 input-group secondary">
                <div class="checkbox">
                    @Html.EditorFor(model => model.is_staff)
                    @Html.ValidationMessageFor(model => model.is_staff, "", new { @class = "text-danger" })
                </div>
            </div>
            <span class="desc">Indica si el usuario puede entrar en este sitio de administración.</span>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="is_active">Activo</label>
            <div class="col-md-10 input-group secondary">
                <div class="checkbox">
                    @Html.EditorFor(model => model.is_active)
                    @Html.ValidationMessageFor(model => model.is_active, "", new { @class = "text-danger" })
                </div>
            </div>
            <span class="desc">Indica si el usuario debe ser tratado como activo. Desmarque esta opción en lugar de borrar la cuenta.</span>
        </div>


        <div class="col-xs-12 col-sm-9 col-md-8 padding-bottom-30">
            <div class="text-left">
                <a class="btn btn-secondary btn-icon bottom15 right15" href="@Url.Action("Index","User")">
                    <i class="fa fa-arrow-left"></i>
                    <span class="title">Regresar</span>
                </a>

                <button type="submit" class="btn btn-info btn-icon bottom15 right15">
                    <i class="fa fa-floppy-o"></i> &nbsp; <span>Guardar</span>
                </button>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>
   $(function(){
      var msg = "@(TempData["Msg"] as string)";
      var msgErr = "@(TempData["MsgErr"] as string)";
     if (msg !== "") {
         toastr.success(msg);
     }
     if (msgErr !== "") {
         toastr.error(msgErr);
     }
  });
</script>

